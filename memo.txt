// component,@PlayButton
/*
draw start/stop button
start/stop audio
*/
function onClick() {
  const idIndex = this.id.replace('prefix', '');
  const data = getDatas(idIndex);
  const played = getPlayed();
  const audio = document.getElementById('audio-id');

  if (played) {
    _drawStartButton(index);
    _unsetPlayed();
    _stopAudio();
    addProp(() => {
      const index = idIndex;
      _drawStopButton(index);
      _startAudio();
      _setPlayed();
    })
    drawHeaderStartButton();
  } else {
    _drawStopButton(index);
    _setPlayed();
    _startAudio();
    addProp(() => {
      const index = idIndex;
      _drawStartButton(index);
      _stopAudio();
      _unsetPlayed();
    });
    drawHeaderStopButton();
  }
  drawHeaderAudioTitle(title);
  // addNextProp(); // for HeaderNextButton prop
  // addPreviousProp(); // for HeaderPreviousButton prop
}

function _drawStartButton(index) {}
function _drawStopButton(index) {}
function _startAudio() {}
function _stopAutio() {}



// shared, @HeaderPlayButton
const _props = []; // one of callback
function onClick() {
  (_props.pop())();
  // my process
  // get audio status
  // if (status === 'start') ? draw stop : draw start;
}
function addProp(callback) {
  // HACK
  _props.reduce((previousCallback) => {
    (previousCallback)();
  });
  _props.push(callback);
}
function initProps() {
  _props = [];
}
function drawStartButton() {}
function drawsStopButton() {}
